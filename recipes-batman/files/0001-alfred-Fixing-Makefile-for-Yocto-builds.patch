From f8264b910a6ed8294c2c27f984c67bbfdb84aea5 Mon Sep 17 00:00:00 2001
From: Jonathan Haws <jhaws@sdl.usu.edu>
Date: Sat, 31 Dec 2016 12:27:38 -0700
Subject: [PATCH] Updating Makefiles for Yocto builds

---
 Makefile     | 33 ++++++++++++++++++---------------
 vis/Makefile | 20 ++++++++++----------
 2 files changed, 28 insertions(+), 25 deletions(-)

diff --git a/Makefile b/Makefile
index 552e690..2a46013 100755
--- a/Makefile
+++ b/Makefile
@@ -35,12 +35,15 @@ OBJ += util.o
 MANPAGE = man/alfred.8
 
 # alfred flags and options
-CFLAGS += -pedantic -Wall -W -std=gnu99 -fno-strict-aliasing -MD -MP
-CPPFLAGS += -D_GNU_SOURCE
-LDLIBS += -lrt
+AL_CFLAGS += -pedantic -Wall -W -std=gnu99 -fno-strict-aliasing -MD -MP
+AL_CPPFLAGS += -D_GNU_SOURCE
+AL_LDLIBS += -lrt
 
 # Turn on alfred capability dropping by default - set this to n if you don't want/need it
-export CONFIG_ALFRED_CAPABILITIES=y
+export CONFIG_ALFRED_CAPABILITIES=n
+
+# Turn off alfred gpsd
+export CONFIG_ALFRED_GPSD=n
 
 # disable verbose output
 ifneq ($(findstring $(MAKEFLAGS),s),s)
@@ -57,8 +60,8 @@ CC ?= gcc
 RM ?= rm -f
 INSTALL ?= install
 MKDIR ?= mkdir -p
-COMPILE.c = $(Q_CC)$(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
-LINK.o = $(Q_LD)$(CC) $(CFLAGS) $(LDFLAGS) $(TARGET_ARCH)
+COMPILE.c = $(Q_CC)$(CC) $(AL_CFLAGS) $(AL_CPPFLAGS) $(TARGET_ARCH) -c
+LINK.o = $(Q_LD)$(CC) $(AL_CFLAGS) $(LDFLAGS) $(TARGET_ARCH)
 
 # standard install paths
 PREFIX = /usr/local
@@ -70,7 +73,7 @@ REVISION= $(shell	if [ -d .git ]; then \
 				echo $$(git describe --always --dirty --match "v*" |sed 's/^v//' 2> /dev/null || echo "[unknown]"); \
 			fi)
 ifneq ($(REVISION),)
-CPPFLAGS += -DSOURCE_VERSION=\"$(REVISION)\"
+AL_CPPFLAGS += -DSOURCE_VERSION=\"$(REVISION)\"
 endif
 
 ifneq ($(CONFIG_ALFRED_VIS),n)
@@ -100,8 +103,8 @@ ifeq ($(origin LIBNL_CFLAGS) $(origin LIBNL_LDLIBS), undefined undefined)
   LIBNL_CFLAGS += $(shell $(PKG_CONFIG) --cflags $(LIBNL_NAME))
   LIBNL_LDLIBS +=  $(shell $(PKG_CONFIG) --libs $(LIBNL_NAME))
 endif
-CFLAGS += $(LIBNL_CFLAGS)
-LDLIBS += $(LIBNL_LDLIBS)
+AL_CFLAGS += $(LIBNL_CFLAGS)
+AL_LDLIBS += $(LIBNL_LDLIBS)
 
 ifeq ($(origin LIBNL_GENL_CFLAGS) $(origin LIBNL_GENL_LDLIBS), undefined undefined)
   LIBNL_GENL_NAME ?= libnl-genl-3.0
@@ -111,8 +114,8 @@ ifeq ($(origin LIBNL_GENL_CFLAGS) $(origin LIBNL_GENL_LDLIBS), undefined undefin
   LIBNL_GENL_CFLAGS += $(shell $(PKG_CONFIG) --cflags $(LIBNL_GENL_NAME))
   LIBNL_GENL_LDLIBS += $(shell $(PKG_CONFIG) --libs $(LIBNL_GENL_NAME))
 endif
-CFLAGS += $(LIBNL_GENL_CFLAGS)
-LDLIBS += $(LIBNL_GENL_LDLIBS)
+AL_CFLAGS += $(LIBNL_GENL_CFLAGS)
+AL_LDLIBS += $(LIBNL_GENL_LDLIBS)
 
 ifneq ($(CONFIG_ALFRED_CAPABILITIES),n)
   ifeq ($(origin LIBCAP_CFLAGS) $(origin LIBCAP_LDLIBS), undefined undefined)
@@ -123,9 +126,9 @@ ifneq ($(CONFIG_ALFRED_CAPABILITIES),n)
     LIBCAP_CFLAGS += $(shell $(PKG_CONFIG) --cflags $(LIBCAP_NAME))
     LIBCAP_LDLIBS +=  $(shell $(PKG_CONFIG) --libs $(LIBCAP_NAME))
   endif
-  CFLAGS += $(LIBCAP_CFLAGS)
-  CPPFLAGS += -DCONFIG_ALFRED_CAPABILITIES
-  LDLIBS += $(LIBCAP_LDLIBS)
+  AL_CFLAGS += $(LIBCAP_CFLAGS)
+  AL_CPPFLAGS += -DCONFIG_ALFRED_CAPABILITIES
+  AL_LDLIBS += $(LIBCAP_LDLIBS)
 endif
 
 
@@ -138,7 +141,7 @@ all: $(BINARY_NAME) $(VIS_ALL) $(GPSD_ALL)
 	$(COMPILE.c) -o $@ $<
 
 $(BINARY_NAME): $(OBJ)
-	$(LINK.o) $^ $(LDLIBS) -o $@
+	$(LINK.o) $^ $(LDLIBS) $(AL_LDLIBS) -o $@
 
 clean:	$(VIS_CLEAN) $(GPSD_CLEAN)
 	$(RM) $(BINARY_NAME) $(OBJ) $(DEP)
diff --git a/vis/Makefile b/vis/Makefile
index 22483a5..aa95e84 100755
--- a/vis/Makefile
+++ b/vis/Makefile
@@ -26,9 +26,9 @@ OBJ += vis.o
 MANPAGE = man/batadv-vis.8
 
 # batadv-vis flags and options
-CFLAGS += -pedantic -Wall -W -std=gnu99 -fno-strict-aliasing -MD -MP
-CPPFLAGS += -D_GNU_SOURCE
-LDLIBS += -lrt
+VIS_CFLAGS += -pedantic -Wall -W -std=gnu99 -fno-strict-aliasing -MD -MP
+VIS_CPPFLAGS += -D_GNU_SOURCE
+VIS_LDLIBS += -lrt
 
 # disable verbose output
 ifneq ($(findstring $(MAKEFLAGS),s),s)
@@ -45,8 +45,8 @@ CC ?= gcc
 RM ?= rm -f
 INSTALL ?= install
 MKDIR ?= mkdir -p
-COMPILE.c = $(Q_CC)$(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
-LINK.o = $(Q_LD)$(CC) $(CFLAGS) $(LDFLAGS) $(TARGET_ARCH)
+COMPILE.c = $(Q_CC)$(CC) $(VIS_CFLAGS) $(VIS_CPPFLAGS) $(TARGET_ARCH) -c
+LINK.o = $(Q_LD)$(CC) $(VIS_CFLAGS) $(LDFLAGS) $(TARGET_ARCH)
 
 # standard install paths
 PREFIX = /usr/local
@@ -76,8 +76,8 @@ ifeq ($(origin LIBNL_CFLAGS) $(origin LIBNL_LDLIBS), undefined undefined)
   LIBNL_CFLAGS += $(shell $(PKG_CONFIG) --cflags $(LIBNL_NAME))
   LIBNL_LDLIBS +=  $(shell $(PKG_CONFIG) --libs $(LIBNL_NAME))
 endif
-CFLAGS += $(LIBNL_CFLAGS)
-LDLIBS += $(LIBNL_LDLIBS)
+VIS_CFLAGS += $(LIBNL_CFLAGS)
+VIS_LDLIBS += $(LIBNL_LDLIBS)
 
 ifeq ($(origin LIBNL_GENL_CFLAGS) $(origin LIBNL_GENL_LDLIBS), undefined undefined)
   LIBNL_GENL_NAME ?= libnl-genl-3.0
@@ -87,8 +87,8 @@ ifeq ($(origin LIBNL_GENL_CFLAGS) $(origin LIBNL_GENL_LDLIBS), undefined undefin
   LIBNL_GENL_CFLAGS += $(shell $(PKG_CONFIG) --cflags $(LIBNL_GENL_NAME))
   LIBNL_GENL_LDLIBS += $(shell $(PKG_CONFIG) --libs $(LIBNL_GENL_NAME))
 endif
-CFLAGS += $(LIBNL_GENL_CFLAGS)
-LDLIBS += $(LIBNL_GENL_LDLIBS)
+VIS_CFLAGS += $(LIBNL_GENL_CFLAGS)
+VIS_LDLIBS += $(LIBNL_GENL_LDLIBS)
 
 # default target
 all: $(BINARY_NAME)
@@ -99,7 +99,7 @@ all: $(BINARY_NAME)
 	$(COMPILE.c) -o $@ $<
 
 $(BINARY_NAME): $(OBJ)
-	$(LINK.o) $^ $(LDLIBS) -o $@
+	$(LINK.o) $^ $(LDLIBS) $(VIS_LDLIBS) -o $@
 
 clean:
 	$(RM) $(BINARY_NAME) $(OBJ) $(DEP)
-- 
1.9.1

